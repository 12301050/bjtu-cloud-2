<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd   
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd   
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-4.1.xsd   
        http://www.springframework.org/schema/mvc   
        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd   
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-4.1.xsd">

    <!-- mysql 数据源配置 -->
    <bean id="goodsCenterDataSource" class="com.alibaba.druid.pool.DruidDataSource"
          destroy-method="close">
        <!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
        <property name="driverClassName" value="${jdbc.mysql.driver}"/>
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${jdbc.mysql.url}"/>
        <property name="username" value="${jdbc.mysql.username}"/>
        <property name="password" value="${jdbc.mysql.password}"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="3"/>
        <property name="minIdle" value="3"/>
        <property name="maxActive" value="20"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="30000"/>
        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="false"/>
        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat"/>
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.bjtu.cloud.repository"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryGoodsCenter"/>
    </bean>

    <bean id="sqlSessionFactoryGoodsCenter" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="goodsCenterDataSource"/>
        <property name="typeAliasesPackage" value="com.bjtu.cloud.common.entity"/>
        <property name="mapperLocations" value="classpath*:mapper/*.xml"/>
    </bean>


    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManagerGoodsCenter"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="goodsCenterDataSource"/>
    </bean>
    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven transaction-manager="transactionManagerGoodsCenter"/>

    <!--&lt;!&ndash; 数据源－opensystem &ndash;&gt;-->
    <!--<bean id="dataSourceOpenSystem" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">-->
        <!--&lt;!&ndash; Connection Info &ndash;&gt;-->
        <!--<property name="driverClassName" value="${jdbc.sqlserver.driver}" />-->
        <!--<property name="url" value="${jdbc.sqlserver.url}" />-->
        <!--<property name="username" value="${jdbc.sqlserver.username}" />-->
        <!--<property name="password" value="${jdbc.sqlserver.password}" />-->

        <!--&lt;!&ndash; Connection Pooling Info &ndash;&gt;-->
        <!--<property name="maxActive" value="20" />-->
        <!--&lt;!&ndash; 初始化连接大小 &ndash;&gt;-->
        <!--<property name="initialSize" value="3"/>-->
        <!--&lt;!&ndash; 自动清除无用连接 &ndash;&gt;-->
        <!--<property name="removeAbandoned" value="true"/>-->
        <!--&lt;!&ndash; 清除无用连接的等待时间 &ndash;&gt;-->
        <!--<property name="removeAbandonedTimeout" value="180"/>-->
        <!--&lt;!&ndash;<property name="maxIdle" value="${jdbc.pool.maxIdle}" />&ndash;&gt;-->
        <!--<property name="minIdle" value="0" />-->
        <!--<property name="defaultAutoCommit" value="false" />-->

        <!--&lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;-->
        <!--<property name="maxWait" value="60000" />-->

        <!--&lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
        <!--<property name="timeBetweenEvictionRunsMillis" value="60000" />-->

        <!--&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
        <!--<property name="minEvictableIdleTimeMillis" value="300000" />-->

        <!--<property name="validationQuery" value="SELECT 'x'" />-->
        <!--<property name="testWhileIdle" value="true" />-->
        <!--<property name="testOnBorrow" value="false" />-->
        <!--<property name="testOnReturn" value="false" />-->
        <!--&lt;!&ndash;<property name="filters" value="stat" />&ndash;&gt;-->
    <!--</bean>-->

    <!--&lt;!&ndash; scan for mappers and let them be autowired &ndash;&gt;-->
    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
        <!--<property name="basePackage" value="com.lvmeng.attendance.repository.oracle" />-->
        <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryOpenSystem"/>-->
    <!--</bean>-->

    <!--&lt;!&ndash; define the SqlSessionFactory &ndash;&gt;-->
    <!--<bean id="sqlSessionFactoryOpenSystem" class="org.mybatis.spring.SqlSessionFactoryBean" name="sqlSessionFactoryOpenSystem">-->
        <!--<property name="dataSource" ref="dataSourceOpenSystem" />-->
        <!--<property name="typeAliasesPackage" value="com.lvmeng.attendance.common.entity.oracle" />-->
        <!--&lt;!&ndash;<property name="mapperLocations" value="classpath*:mapper/*.xml"/>&ndash;&gt;-->
    <!--</bean>-->

</beans>